apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'ru.vyarus.animalsniffer'

sourceCompatibility = 1.7
targetCompatibility = 1.7

sourceSets {
    main.java.srcDirs += "${rootProject.projectDir}/src/main/java"
    test.java.srcDirs += "${rootProject.projectDir}/src/test/java"
    test.java.exclude '**/OsgiITest.java'
    test.java.exclude '**/*IT.java'
    test.resources.srcDirs += "${rootProject.projectDir}/src/test/resources"
}

task processTestResources2 << {
    copy {
        from tarTree(resources.bzip2("${rootProject.projectDir}/src/test/resources/zip64support.tar.bz2"))
        into sourceSets.test.output.resourcesDir
    }
    copy {
        from tarTree("${rootProject.projectDir}/src/test/resources/zstd-tests.tar")
        into sourceSets.test.output.resourcesDir
    }
}

test.dependsOn processTestResources2

animalsniffer {
    // D8 can handles "void Throwable.addSuppressed(Throwable)"
    ignore 'java.lang.Throwable'
}

dependencies {
    compile 'com.github.luben:zstd-jni:1.3.7-2'
    compile 'org.tukaani:xz:1.8'
    compile 'org.brotli:dec:0.1.2'
    compile 'com.github.seven332.okio:okio:1.16.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.powermock:powermock-module-junit4:1.6.6'
    testCompile 'org.powermock:powermock-api-mockito:1.6.6'
    signature 'org.codehaus.mojo.signature:java16:1.1@signature'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
    failOnError false
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
